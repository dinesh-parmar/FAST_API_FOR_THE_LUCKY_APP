from typing import Optional,List

from pydantic import BaseModel, EmailStr, Field, ValidationError


class TwoD_Schema(BaseModel):
    time: str = Field(...)
    value:  list = Field(...)

    class Config:
        schema_extra={
            "time": "800",
            "value": [[77, 14, 62, 54, 73, 0, 1, 35, 10, 48], 
            [78, 49, 42, 19, 97, 95, 23, 9, 20, 99], 
            [83, 98, 65, 45, 67, 36, 68, 28, 47, 6], 
            [80, 94, 71, 50, 41, 69, 81, 8, 26, 39], 
            [15, 85, 34, 89, 46, 57, 38, 96, 66, 70], 
            [63, 17, 25, 64, 7, 2, 21, 53, 87, 27],
             [5, 93, 37, 58, 31, 18, 82, 51, 75, 3], 
             [92, 24, 40, 22, 44, 72, 11, 30, 33, 4], 
             [16, 60, 86, 59, 43, 76, 74, 29, 32, 90], 
             [88, 12, 91, 56, 55, 84, 61, 79, 13, 52]]
            
        }

        
class Update2D_Model(BaseModel):
    time: str
    twod_value: List[List[List[int]]]
    fourd_value: List[List[List[int]]]

    class Config:
        schema_extra = {
            "time": "0800",
            "twodvalue": [[[74], [25], [72], [70], [20], [13], [32], [45], [92], [9]],
             [[22], [47], [68], [52], [90], [19], [86], [64], [44], [35]], 
             [[49], [66], [18], [54], [75], [87], [43], [76], [89], [34]],
              [[84], [80], [8], [39], [37], [71], [56], [1], [11], [98]],
               [[29], [40], [14], [30], [41], [0], [24], [59], [73], [16]],
                [[60], [42], [38], [33], [21], [10], [81], [61], [83], [15]],
                 [[26], [79], [82], [91], [55], [93], [51], [94], [65], [48]],
                  [[96], [6], [36], [95], [12], [62], [23], [67], [31], [77]],
                   [[17], [78], [88], [97], [2], [53], [50], [27], [7], [4]],
                    [[5], [57], [46], [99], [28], [3], [58], [69], [85], [63]]],
            "fourd_value": [[[65], [41], [55], [74], [75], [81], [50], [7], [68], [90]],
                            [[17], [96], [60, 21], [], [93], [97], [], [58, 31], [30], [62]],
                            [[70, 79], [], [69], [43], [78], [86], [5], [3], [1], [71]], 
                            [[48], [91], [45], [59], [28], [67], [94], [52], [34, 9], []],
                            [[64], [2, 99], [], [39], [38], [16], [73], [88], [95, 8], []],
                            [[10], [44], [26], [24], [54], [15], [4, 66], [], [6], [76]],
                            [[23], [89], [56], [], [40, 14], [20], [83], [0], [36], [11]],
                            [[51], [25], [27, 46], [], [80], [63], [61], [92], [84], [85]],
                            [[37], [87], [22], [98], [29], [], [53, 19], [12], [57], [49]],
                            [[82], [35], [42], [13], [32], [47], [72], [33], [77], [18]]]        
}


def ResponseModel(data, message):
    return {
        "data": [data],
        "code": 200,
        "message": message,
    }
def ErrorResponseModel(error, code, message):
    return {"error": error, "code": code, "message": message}            
